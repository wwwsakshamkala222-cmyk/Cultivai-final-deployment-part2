'use strict';

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.handlePasskeyRegistrationError = void 0;
const react_native_1 = require("@aws-amplify/react-native");
const handlePasskeyError_1 = require("./handlePasskeyError");
const passkeyError_1 = require("./passkeyError");
/**
 * Handle Passkey Registration Errors
 *
 * @param err unknown
 * @returns PasskeyError
 */
const handlePasskeyRegistrationError = (err) => {
    if (err instanceof passkeyError_1.PasskeyError) {
        return err;
    }
    if ((0, react_native_1.getIsNativeError)(err)) {
        // Passkey Registration Failed
        if (err.code === 'FAILED') {
            const { message, recoverySuggestion } = passkeyError_1.passkeyErrorMap[passkeyError_1.PasskeyErrorCode.PasskeyRegistrationFailed];
            return new passkeyError_1.PasskeyError({
                name: passkeyError_1.PasskeyErrorCode.PasskeyRegistrationFailed,
                message,
                recoverySuggestion,
                underlyingError: err,
            });
        }
        // Duplicate Passkey
        if (err.code === 'DUPLICATE') {
            const { message, recoverySuggestion } = passkeyError_1.passkeyErrorMap[passkeyError_1.PasskeyErrorCode.PasskeyAlreadyExists];
            return new passkeyError_1.PasskeyError({
                name: passkeyError_1.PasskeyErrorCode.PasskeyAlreadyExists,
                message,
                recoverySuggestion,
                underlyingError: err,
            });
        }
        // User Cancels Ceremony
        if (err.code === 'CANCELED') {
            const { message, recoverySuggestion } = passkeyError_1.passkeyErrorMap[passkeyError_1.PasskeyErrorCode.PasskeyRegistrationCanceled];
            return new passkeyError_1.PasskeyError({
                name: passkeyError_1.PasskeyErrorCode.PasskeyRegistrationCanceled,
                message,
                recoverySuggestion,
                underlyingError: err,
            });
        }
    }
    return (0, handlePasskeyError_1.handlePasskeyError)(err);
};
exports.handlePasskeyRegistrationError = handlePasskeyRegistrationError;
//# sourceMappingURL=handlePasskeyRegistrationError.native.js.map
