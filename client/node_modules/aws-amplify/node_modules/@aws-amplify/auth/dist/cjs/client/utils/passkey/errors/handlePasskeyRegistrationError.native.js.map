{"version":3,"file":"handlePasskeyRegistrationError.native.js","sources":["../../../../../../src/client/utils/passkey/errors/handlePasskeyRegistrationError.native.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handlePasskeyRegistrationError = void 0;\nconst react_native_1 = require(\"@aws-amplify/react-native\");\nconst handlePasskeyError_1 = require(\"./handlePasskeyError\");\nconst passkeyError_1 = require(\"./passkeyError\");\n/**\n * Handle Passkey Registration Errors\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyRegistrationError = (err) => {\n    if (err instanceof passkeyError_1.PasskeyError) {\n        return err;\n    }\n    if ((0, react_native_1.getIsNativeError)(err)) {\n        // Passkey Registration Failed\n        if (err.code === 'FAILED') {\n            const { message, recoverySuggestion } = passkeyError_1.passkeyErrorMap[passkeyError_1.PasskeyErrorCode.PasskeyRegistrationFailed];\n            return new passkeyError_1.PasskeyError({\n                name: passkeyError_1.PasskeyErrorCode.PasskeyRegistrationFailed,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n        // Duplicate Passkey\n        if (err.code === 'DUPLICATE') {\n            const { message, recoverySuggestion } = passkeyError_1.passkeyErrorMap[passkeyError_1.PasskeyErrorCode.PasskeyAlreadyExists];\n            return new passkeyError_1.PasskeyError({\n                name: passkeyError_1.PasskeyErrorCode.PasskeyAlreadyExists,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n        // User Cancels Ceremony\n        if (err.code === 'CANCELED') {\n            const { message, recoverySuggestion } = passkeyError_1.passkeyErrorMap[passkeyError_1.PasskeyErrorCode.PasskeyRegistrationCanceled];\n            return new passkeyError_1.PasskeyError({\n                name: passkeyError_1.PasskeyErrorCode.PasskeyRegistrationCanceled,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return (0, handlePasskeyError_1.handlePasskeyError)(err);\n};\nexports.handlePasskeyRegistrationError = handlePasskeyRegistrationError;\n"],"names":[],"mappings":";;AACA;AACA;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC7D,OAAO,CAAC,8BAA8B,GAAG,MAAM;AAC/C,MAAM,cAAc,GAAG,OAAO,CAAC,2BAA2B,CAAC;AAC3D,MAAM,oBAAoB,GAAG,OAAO,CAAC,sBAAsB,CAAC;AAC5D,MAAM,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8BAA8B,GAAG,CAAC,GAAG,KAAK;AAChD,IAAI,IAAI,GAAG,YAAY,cAAc,CAAC,YAAY,EAAE;AACpD,QAAQ,OAAO,GAAG;AAClB,IAAI;AACJ,IAAI,IAAI,IAAI,cAAc,CAAC,gBAAgB,EAAE,GAAG,CAAC,EAAE;AACnD;AACA,QAAQ,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,YAAY,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,cAAc,CAAC,eAAe,CAAC,cAAc,CAAC,gBAAgB,CAAC,yBAAyB,CAAC;AAC7I,YAAY,OAAO,IAAI,cAAc,CAAC,YAAY,CAAC;AACnD,gBAAgB,IAAI,EAAE,cAAc,CAAC,gBAAgB,CAAC,yBAAyB;AAC/E,gBAAgB,OAAO;AACvB,gBAAgB,kBAAkB;AAClC,gBAAgB,eAAe,EAAE,GAAG;AACpC,aAAa,CAAC;AACd,QAAQ;AACR;AACA,QAAQ,IAAI,GAAG,CAAC,IAAI,KAAK,WAAW,EAAE;AACtC,YAAY,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,cAAc,CAAC,eAAe,CAAC,cAAc,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;AACxI,YAAY,OAAO,IAAI,cAAc,CAAC,YAAY,CAAC;AACnD,gBAAgB,IAAI,EAAE,cAAc,CAAC,gBAAgB,CAAC,oBAAoB;AAC1E,gBAAgB,OAAO;AACvB,gBAAgB,kBAAkB;AAClC,gBAAgB,eAAe,EAAE,GAAG;AACpC,aAAa,CAAC;AACd,QAAQ;AACR;AACA,QAAQ,IAAI,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE;AACrC,YAAY,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,cAAc,CAAC,eAAe,CAAC,cAAc,CAAC,gBAAgB,CAAC,2BAA2B,CAAC;AAC/I,YAAY,OAAO,IAAI,cAAc,CAAC,YAAY,CAAC;AACnD,gBAAgB,IAAI,EAAE,cAAc,CAAC,gBAAgB,CAAC,2BAA2B;AACjF,gBAAgB,OAAO;AACvB,gBAAgB,kBAAkB;AAClC,gBAAgB,eAAe,EAAE,GAAG;AACpC,aAAa,CAAC;AACd,QAAQ;AACR,IAAI;AACJ,IAAI,OAAO,IAAI,oBAAoB,CAAC,kBAAkB,EAAE,GAAG,CAAC;AAC5D,CAAC;AACD,OAAO,CAAC,8BAA8B,GAAG,8BAA8B;;"}